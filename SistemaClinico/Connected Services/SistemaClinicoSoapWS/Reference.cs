//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaClinico.SistemaClinicoSoapWS {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SistemaClinicoSoapWS.ClinicaWebServiceSoap")]
    public interface ClinicaWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_sintomas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_sintomasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_sintomas2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_sintomas2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_sintomas2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_sintomas2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_sintomas(int id_sintoma, string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_sintomasAsync(int id_sintoma, string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_enfermedades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_enfermedades_sintomas(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedades_sintomasAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades_sintomas_detail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_enfermedades_sintomas_detail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades_sintomas_detail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedades_sintomas_detailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades_sintomas_nombres", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_enfermedades_sintomas_nombres(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_enfermedades_sintomas_nombres", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedades_sintomas_nombresAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_enfermedad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_enfermedad(string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_enfermedad", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_enfermedadAsync(string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_enfermedad_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_enfermedad_sintomas(int id_enfermedad, int id_sintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_enfermedad_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_enfermedad_sintomasAsync(int id_enfermedad, int id_sintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_enfermedad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_enfermedad(int id_enfermedad, string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_enfermedad", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_enfermedadAsync(int id_enfermedad, string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_enfermedad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_enfermedad(int idenfermedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_enfermedad", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_enfermedadAsync(int idenfermedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_enfermedad_sintoma", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_enfermedad_sintoma(int idenfermedad_sinto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_enfermedad_sintoma", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_enfermedad_sintomaAsync(int idenfermedad_sinto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_enfermedad_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_enfermedad_sintomas(int id_enfermedad, int id_sintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_enfermedad_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_enfermedad_sintomasAsync(int id_enfermedad, int id_sintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_sintomas(string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_sintomasAsync(string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_sintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_sintomas(int idsintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_sintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_sintomasAsync(int idsintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login2(string usuario, string clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Login2Async(string usuario, string clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Login3(string usuario, string clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Login3Async(string usuario, string clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TodoslosPacientes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TodoslosPacientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TodoslosPacientes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TodoslosPacientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TodosElPersonal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TodosElPersonal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TodosElPersonal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TodosElPersonalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertPaciente(string nombre, string apellido, string dui, string nit, string genero, string tipo_sangre, string tel, string corre, int id_direccion, string dir_com, string estado, string usuario, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPaciente", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertPacienteAsync(string nombre, string apellido, string dui, string nit, string genero, string tipo_sangre, string tel, string corre, int id_direccion, string dir_com, string estado, string usuario, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectIdDireccion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SelectIdDireccion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectIdDireccion", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectIdDireccionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MaxIdEnfermedad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MaxIdEnfermedad();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MaxIdEnfermedad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MaxIdEnfermedadAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nombreMax", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet nombreMax(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nombreMax", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> nombreMaxAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarSintomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AgregarSintomas(int idEnfermedad, int idSintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarSintomas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AgregarSintomasAsync(int idEnfermedad, int idSintoma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert_Medicamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Insert_Medicamento(string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert_Medicamento", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Insert_MedicamentoAsync(string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_medicamentos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet lista_medicamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/lista_medicamentos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> lista_medicamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_medicamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_medicamento(int idmedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_medicamento", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_medicamentoAsync(int idmedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_medicamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_medicamento(int idmedicamento, string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_medicamento", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_medicamentoAsync(int idmedicamento, string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListaAreas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListaAreas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListaAreas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListaAreasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertArea", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertArea(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertArea", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertAreaAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAreas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateAreas(int id, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAreas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateAreasAsync(int id, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarArea", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int EliminarArea(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarArea", ReplyAction="*")]
        System.Threading.Tasks.Task<int> EliminarAreaAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClinicaWebServiceSoapChannel : SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClinicaWebServiceSoapClient : System.ServiceModel.ClientBase<SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoap>, SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoap {
        
        public ClinicaWebServiceSoapClient() {
        }
        
        public ClinicaWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClinicaWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClinicaWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClinicaWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataSet lista_sintomas() {
            return base.Channel.lista_sintomas();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_sintomasAsync() {
            return base.Channel.lista_sintomasAsync();
        }
        
        public System.Data.DataSet lista_sintomas2() {
            return base.Channel.lista_sintomas2();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_sintomas2Async() {
            return base.Channel.lista_sintomas2Async();
        }
        
        public int actualizar_sintomas(int id_sintoma, string nombre, string descripcion) {
            return base.Channel.actualizar_sintomas(id_sintoma, nombre, descripcion);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_sintomasAsync(int id_sintoma, string nombre, string descripcion) {
            return base.Channel.actualizar_sintomasAsync(id_sintoma, nombre, descripcion);
        }
        
        public System.Data.DataSet lista_enfermedades() {
            return base.Channel.lista_enfermedades();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedadesAsync() {
            return base.Channel.lista_enfermedadesAsync();
        }
        
        public System.Data.DataSet lista_enfermedades_sintomas(int id) {
            return base.Channel.lista_enfermedades_sintomas(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedades_sintomasAsync(int id) {
            return base.Channel.lista_enfermedades_sintomasAsync(id);
        }
        
        public System.Data.DataSet lista_enfermedades_sintomas_detail() {
            return base.Channel.lista_enfermedades_sintomas_detail();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedades_sintomas_detailAsync() {
            return base.Channel.lista_enfermedades_sintomas_detailAsync();
        }
        
        public System.Data.DataSet lista_enfermedades_sintomas_nombres(int id) {
            return base.Channel.lista_enfermedades_sintomas_nombres(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_enfermedades_sintomas_nombresAsync(int id) {
            return base.Channel.lista_enfermedades_sintomas_nombresAsync(id);
        }
        
        public int insertar_enfermedad(string nombre, string descripcion) {
            return base.Channel.insertar_enfermedad(nombre, descripcion);
        }
        
        public System.Threading.Tasks.Task<int> insertar_enfermedadAsync(string nombre, string descripcion) {
            return base.Channel.insertar_enfermedadAsync(nombre, descripcion);
        }
        
        public int insertar_enfermedad_sintomas(int id_enfermedad, int id_sintoma) {
            return base.Channel.insertar_enfermedad_sintomas(id_enfermedad, id_sintoma);
        }
        
        public System.Threading.Tasks.Task<int> insertar_enfermedad_sintomasAsync(int id_enfermedad, int id_sintoma) {
            return base.Channel.insertar_enfermedad_sintomasAsync(id_enfermedad, id_sintoma);
        }
        
        public int actualizar_enfermedad(int id_enfermedad, string nombre, string descripcion) {
            return base.Channel.actualizar_enfermedad(id_enfermedad, nombre, descripcion);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_enfermedadAsync(int id_enfermedad, string nombre, string descripcion) {
            return base.Channel.actualizar_enfermedadAsync(id_enfermedad, nombre, descripcion);
        }
        
        public int eliminar_enfermedad(int idenfermedad) {
            return base.Channel.eliminar_enfermedad(idenfermedad);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_enfermedadAsync(int idenfermedad) {
            return base.Channel.eliminar_enfermedadAsync(idenfermedad);
        }
        
        public int eliminar_enfermedad_sintoma(int idenfermedad_sinto) {
            return base.Channel.eliminar_enfermedad_sintoma(idenfermedad_sinto);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_enfermedad_sintomaAsync(int idenfermedad_sinto) {
            return base.Channel.eliminar_enfermedad_sintomaAsync(idenfermedad_sinto);
        }
        
        public int actualizar_enfermedad_sintomas(int id_enfermedad, int id_sintoma) {
            return base.Channel.actualizar_enfermedad_sintomas(id_enfermedad, id_sintoma);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_enfermedad_sintomasAsync(int id_enfermedad, int id_sintoma) {
            return base.Channel.actualizar_enfermedad_sintomasAsync(id_enfermedad, id_sintoma);
        }
        
        public int insertar_sintomas(string nombre, string descripcion) {
            return base.Channel.insertar_sintomas(nombre, descripcion);
        }
        
        public System.Threading.Tasks.Task<int> insertar_sintomasAsync(string nombre, string descripcion) {
            return base.Channel.insertar_sintomasAsync(nombre, descripcion);
        }
        
        public int eliminar_sintomas(int idsintoma) {
            return base.Channel.eliminar_sintomas(idsintoma);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_sintomasAsync(int idsintoma) {
            return base.Channel.eliminar_sintomasAsync(idsintoma);
        }
        
        public string Login2(string usuario, string clave) {
            return base.Channel.Login2(usuario, clave);
        }
        
        public System.Threading.Tasks.Task<string> Login2Async(string usuario, string clave) {
            return base.Channel.Login2Async(usuario, clave);
        }
        
        public System.Data.DataSet Login3(string usuario, string clave) {
            return base.Channel.Login3(usuario, clave);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Login3Async(string usuario, string clave) {
            return base.Channel.Login3Async(usuario, clave);
        }
        
        public System.Data.DataSet TodoslosPacientes() {
            return base.Channel.TodoslosPacientes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TodoslosPacientesAsync() {
            return base.Channel.TodoslosPacientesAsync();
        }
        
        public System.Data.DataSet TodosElPersonal() {
            return base.Channel.TodosElPersonal();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TodosElPersonalAsync() {
            return base.Channel.TodosElPersonalAsync();
        }
        
        public int InsertPaciente(string nombre, string apellido, string dui, string nit, string genero, string tipo_sangre, string tel, string corre, int id_direccion, string dir_com, string estado, string usuario, string pass) {
            return base.Channel.InsertPaciente(nombre, apellido, dui, nit, genero, tipo_sangre, tel, corre, id_direccion, dir_com, estado, usuario, pass);
        }
        
        public System.Threading.Tasks.Task<int> InsertPacienteAsync(string nombre, string apellido, string dui, string nit, string genero, string tipo_sangre, string tel, string corre, int id_direccion, string dir_com, string estado, string usuario, string pass) {
            return base.Channel.InsertPacienteAsync(nombre, apellido, dui, nit, genero, tipo_sangre, tel, corre, id_direccion, dir_com, estado, usuario, pass);
        }
        
        public System.Data.DataSet SelectIdDireccion() {
            return base.Channel.SelectIdDireccion();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectIdDireccionAsync() {
            return base.Channel.SelectIdDireccionAsync();
        }
        
        public System.Data.DataSet MaxIdEnfermedad() {
            return base.Channel.MaxIdEnfermedad();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MaxIdEnfermedadAsync() {
            return base.Channel.MaxIdEnfermedadAsync();
        }
        
        public System.Data.DataSet nombreMax(int id) {
            return base.Channel.nombreMax(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> nombreMaxAsync(int id) {
            return base.Channel.nombreMaxAsync(id);
        }
        
        public int AgregarSintomas(int idEnfermedad, int idSintoma) {
            return base.Channel.AgregarSintomas(idEnfermedad, idSintoma);
        }
        
        public System.Threading.Tasks.Task<int> AgregarSintomasAsync(int idEnfermedad, int idSintoma) {
            return base.Channel.AgregarSintomasAsync(idEnfermedad, idSintoma);
        }
        
        public int Insert_Medicamento(string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado) {
            return base.Channel.Insert_Medicamento(nombre, descripcion, cantidad, presentacion, precio, estado);
        }
        
        public System.Threading.Tasks.Task<int> Insert_MedicamentoAsync(string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado) {
            return base.Channel.Insert_MedicamentoAsync(nombre, descripcion, cantidad, presentacion, precio, estado);
        }
        
        public System.Data.DataSet lista_medicamentos() {
            return base.Channel.lista_medicamentos();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> lista_medicamentosAsync() {
            return base.Channel.lista_medicamentosAsync();
        }
        
        public int eliminar_medicamento(int idmedicamento) {
            return base.Channel.eliminar_medicamento(idmedicamento);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_medicamentoAsync(int idmedicamento) {
            return base.Channel.eliminar_medicamentoAsync(idmedicamento);
        }
        
        public int actualizar_medicamento(int idmedicamento, string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado) {
            return base.Channel.actualizar_medicamento(idmedicamento, nombre, descripcion, cantidad, presentacion, precio, estado);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_medicamentoAsync(int idmedicamento, string nombre, string descripcion, int cantidad, string presentacion, double precio, string estado) {
            return base.Channel.actualizar_medicamentoAsync(idmedicamento, nombre, descripcion, cantidad, presentacion, precio, estado);
        }
        
        public System.Data.DataSet ListaAreas() {
            return base.Channel.ListaAreas();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListaAreasAsync() {
            return base.Channel.ListaAreasAsync();
        }
        
        public int InsertArea(string nombre) {
            return base.Channel.InsertArea(nombre);
        }
        
        public System.Threading.Tasks.Task<int> InsertAreaAsync(string nombre) {
            return base.Channel.InsertAreaAsync(nombre);
        }
        
        public int UpdateAreas(int id, string nombre) {
            return base.Channel.UpdateAreas(id, nombre);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAreasAsync(int id, string nombre) {
            return base.Channel.UpdateAreasAsync(id, nombre);
        }
        
        public int EliminarArea(int id) {
            return base.Channel.EliminarArea(id);
        }
        
        public System.Threading.Tasks.Task<int> EliminarAreaAsync(int id) {
            return base.Channel.EliminarAreaAsync(id);
        }
    }
}
