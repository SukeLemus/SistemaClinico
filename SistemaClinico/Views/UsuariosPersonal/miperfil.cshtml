@model SistemaClinico.Models.UsuarioPersonal

@{
    ViewBag.Title = "Details";
}
@using SistemaClinico.Controllers;
@using System.Data;
<div class="titulo_general"><h1>@Session["Nombre"] @Session["Apellido"]</h1></div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Mi Perfil</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID_PERSONAL)


        <div class="form-group">
            @Html.Label("Nombre ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRES, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Apellido ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.APELLIDOS, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DUI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DUI, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Género ", htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.GENERO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GENERO, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.GENERO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Departamento ", htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.ID_DEPARTAMENTO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_DEPARTAMENTO, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ID_DEPARTAMENTO,
                          (IEnumerable<SelectListItem>)ViewData["listaDepartamentos"],
                          "Seleccione un Departamento", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Teléfono ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TELEFONO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Rol ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">.
                @Html.DropDownListFor(model => model.ID_ROL,
                          (IEnumerable<SelectListItem>)ViewData["listaRoles"],
                          "Seleccione un Rol", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Correo electrónico ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CORREO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ESTADO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })

            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Municipio ", htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.ID_DIRECCION, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_DIRECCION, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ID_DIRECCION,
                          (IEnumerable<SelectListItem>)ViewData["listaDirecciones"],
                          "Seleccione un Municipio", htmlAttributes: new { @class = "form-control", disabled = "disabled" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Dirección de residencia ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DIRECCION_COM, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Consultorio ", htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.ID_CONSULTORIO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_CONSULTORIO, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ID_CONSULTORIO,
                          (IEnumerable<SelectListItem>)ViewData["listaConsultorios"],
                          "Seleccione un Consultorio", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Usuario ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USUARIO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>*@

        <table align="center">
            <tr>
                <td>
                    <div div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input onclick="location.href='@Url.Action("Index", "Home")'" type="button" value="Volver" class="btn btn-finalizar" />
                        </div>
                    </div>
                </td>
                <td>
                    &nbsp; &nbsp;
                </td>
                <td>
                    <div div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input onclick="location.href='@Url.Action("EditPerfil", "UsuariosPersonal", new { id =Session["id"] })'" type="button" value="Editar Mi Perfil" class="btn btn-success" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}
