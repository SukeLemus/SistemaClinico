@model SistemaClinico.Models.RegistroPacienteUsuario
@using SistemaClinico.Models;
@using SistemaClinico.Controllers;
@{
    ViewBag.Title = "Edit";
}

<div class="titulo_general"><h1>@Session["Nombre"] @Session["Apellido"]</h1></div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Editar Mi Perfil</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.Label("Nombre ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Apellido ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.APELLIDO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APELLIDO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DUI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DUI, new { htmlAttributes = new { @class = "form-control", maxlength = 9 } })
                @Html.ValidationMessageFor(model => model.DUI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @class = "form-control", maxlength = 14 } })
                @Html.ValidationMessageFor(model => model.NIT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Género ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GENERO,
                         new SelectList(Enum.GetValues(typeof(GENEROUsuario))),
                         "Seleccione su género", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GENERO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de sangre ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TIPO_SANGRE,
                          (IEnumerable<SelectListItem>)ViewData["listaSangre"],
                          "Tipo de sangre", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TIPO_SANGRE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Teléfono ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TELEFONO, new { htmlAttributes = new { @class = "form-control", maxlength = 8 } })
                @Html.ValidationMessageFor(model => model.TELEFONO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Correo electrónico ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CORREO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CORREO, "", new { @class = "text-danger" })
            </div>
        </div>
        @using SistemaClinico.Controllers;
        @using System.Data;

        @{
            SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoapClient WSMunicipios = new SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoapClient();
            DataSet ds = WSMunicipios.SelectIdDireccion();

            var selectList = new List<SelectListItem>();


            foreach (DataRow dr in ds.Tables[0].Rows)
            {

                string id = dr["ID_DIRECCION"].ToString();
                string municipio = dr["MUNICIPIO"].ToString();


                selectList.Add(new SelectListItem
                {
                    Value = id,
                    Text = municipio,



                }); ;
                ViewData["chumpe"] = selectList;

            }
        }

        <div class="form-group">
            @Html.Label("Municipio ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ID_DIRECCION,
                          (IEnumerable<SelectListItem>)ViewData["chumpe"],
                          "Seleccione su tipo se municipio", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ID_DIRECCION, "", new { @class = "text-danger" })
            </div>
            @*<div class="col-md-10">
                    @Html.DropDownList("Municipio", (IEnumerable<SelectListItem>)ViewData["chumpe"], "Seleccione su Municipio", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ID_DIRECCION, "", new { @class = "text-danger" })
                </div>*@

        </div>

        <div class="form-group">
            @Html.Label("Dirección completa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DIRECCION_COM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DIRECCION_COM, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.ID_ROL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID_ROL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_ROL, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">*@
            @*@Html.Label("Estado ", htmlAttributes: new { @class = "control-label col-md-2" })*@
            @*<div class="col-md-10">*@
                @Html.HiddenFor(model => model.ESTADO,
                         /* (IEnumerable<SelectListItem>)ViewData["listaEstados"],*/
                         /* "Estado del paciente",*/ htmlAttributes: new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.ESTADO, "", new { @class = "text-danger" })*@
            @*</div>
        </div>*@

        <div class="form-group">
            @Html.Label("Usuario ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USUARIO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USUARIO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Contraseña ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Password("PASSWORD", ViewData["pass"].ToString(), new { @class = "form-control", @placeholder = "Ingerese su Contraseña" })
                @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>*@
        <table align="center">
            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Editar" class="btn btn-success" />
                        </div>
                    </div>
                </td>
                <td>&nbsp;  &nbsp; &nbsp;  &nbsp;</td>
                <td>
                    <div div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input onclick="location.href='@Url.Action("miperfil","Usuarios", new { id = Session["id"] })'" type="button" value="Volver" class="btn btn-finalizar" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
