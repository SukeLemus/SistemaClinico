@model SistemaClinico.Models.RegistroPacienteUsuario

@{
    ViewBag.Title = "Details";
}
@using SistemaClinico.Controllers;
       @using System.Data;
<div class="titulo_general"><h1>Pacientes</h1></div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Detalle Paciente</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        @Html.Label("Nombre ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Apellido ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.APELLIDO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DUI, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DUI, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NIT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Género ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GENERO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Fecha de Nacimiento ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FECHA_NACIMIENTO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tipo de sangre ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TIPO_SANGRE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Teléfono ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TELEFONO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Correo electrónico ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CORREO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>



    @{
        SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoapClient WSMunicipios = new SistemaClinico.SistemaClinicoSoapWS.ClinicaWebServiceSoapClient();
        DataSet ds = WSMunicipios.SelectIdDireccion();

        var selectList = new List<SelectListItem>();


        foreach (DataRow dr in ds.Tables[0].Rows)
        {

            string id = dr["ID_DIRECCION"].ToString();
            string municipio = dr["MUNICIPIO"].ToString();


            selectList.Add(new SelectListItem
            {
                Value = id,
                Text = municipio,



            }); ;
            ViewData["chumpe"] = selectList;

        }
    }



    <div class="form-group">
        @Html.Label("Municipio ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ID_DIRECCION,
                      (IEnumerable<SelectListItem>)ViewData["chumpe"],
                      "Seleccione su tipo se municipio", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Dirección completa", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DIRECCION_COM, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Estado ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ESTADO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Usuario ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USUARIO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

    <table align="center">
        <tr>
            <td>
                <div div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input onclick="location.href='@Url.Action("Index", "Usuarios")'" type="button" value="Volver" class="btn btn-finalizar" />
                    </div>
                </div>
            </td>
        </tr>
    </table>
</div>
    }


    @*<p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
